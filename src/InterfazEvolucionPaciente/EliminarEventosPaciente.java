/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src.InterfazEvolucionPaciente;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import src.Evolucion;
import static src.InterfazHistorial.FormularioHistorialVistaMedico.indexPaciente;
import static src.InterfazHistorial.RegistrarUsuario.listaPacientes;
import src.Paciente;

/**
 *
 * @author Usuario
 */
public class EliminarEventosPaciente extends javax.swing.JFrame {

    /**
     * Creates new form EliminarEventosPaciente
     */
    public EliminarEventosPaciente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTidEvento = new javax.swing.JTextField();
        jBConsultarEventos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTDescripcionEvento = new javax.swing.JTextArea();
        jBEliminarEvento = new javax.swing.JButton();
        jBVolverPantallaPrincipal = new javax.swing.JButton();
        jTNuevoNivelGlucosa = new javax.swing.JTextField();
        jTNuevaDescripcionEvento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jBModificarEvento = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Eliminar Eventos");

        jLabel2.setText("ID Evento: ");

        jBConsultarEventos.setText("Consultar");
        jBConsultarEventos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultarEventosActionPerformed(evt);
            }
        });

        jTDescripcionEvento.setColumns(20);
        jTDescripcionEvento.setRows(5);
        jScrollPane1.setViewportView(jTDescripcionEvento);

        jBEliminarEvento.setText("Eliminar");
        jBEliminarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarEventoActionPerformed(evt);
            }
        });

        jBVolverPantallaPrincipal.setText("Volver");
        jBVolverPantallaPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVolverPantallaPrincipalActionPerformed(evt);
            }
        });

        jLabel3.setText("Nuevo nivel glucosa");

        jLabel4.setText("Nueva descripcion evento");

        jBModificarEvento.setText("Modificar");
        jBModificarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModificarEventoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(41, 41, 41)
                        .addComponent(jTNuevoNivelGlucosa))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBEliminarEvento)
                        .addGap(29, 29, 29)
                        .addComponent(jBModificarEvento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBVolverPantallaPrincipal)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTNuevaDescripcionEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTidEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBConsultarEventos))
                    .addComponent(jScrollPane1))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTidEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBConsultarEventos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTNuevoNivelGlucosa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTNuevaDescripcionEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEliminarEvento)
                    .addComponent(jBVolverPantallaPrincipal)
                    .addComponent(jBModificarEvento))
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBConsultarEventosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultarEventosActionPerformed
        Paciente paciente = listaPacientes.get(indexPaciente);
        ArrayList<Evolucion> evoluciones = paciente.getEvoluciones();
        int idEventoCreado=Integer.parseInt(jTidEvento.getText());
       
        for (int i = 0; i < evoluciones.size(); i++) {
        
            Evolucion eventoConsultado=evoluciones.get(i);
            if (idEventoCreado==eventoConsultado.getIdEvento()) {
               jTDescripcionEvento.setText(
                     "\nID Evento: " + eventoConsultado.getIdEvento()
                    + "\nFecha evento: " + eventoConsultado.getFechaEvento()
                    + "\nNivel Glucosa: " + eventoConsultado.getNivelGlucosa()
                    + "\nDescripcion Evento: " + eventoConsultado.getDescripcionEvento());
            }
        }
    
    }//GEN-LAST:event_jBConsultarEventosActionPerformed

    private void jBModificarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModificarEventoActionPerformed
        Paciente paciente = listaPacientes.get(indexPaciente);
        ArrayList<Evolucion> evoluciones = paciente.getEvoluciones();
        int idEventoCreado=Integer.parseInt(jTidEvento.getText());
       
      
        for (int i = 0; i < evoluciones.size(); i++) {
        
            Evolucion eventoModificado=evoluciones.get(i);
            if (idEventoCreado==eventoModificado.getIdEvento()) {
                int nivelGlucosa=Integer.parseInt(jTNuevoNivelGlucosa.getText());
                eventoModificado.setNivelGlucosa(nivelGlucosa);
                eventoModificado.setDescripcionEvento(jTNuevaDescripcionEvento.getText());
                JOptionPane.showMessageDialog(null, "Evento modificado correctamente"); 
                       
            }
        }  
    }//GEN-LAST:event_jBModificarEventoActionPerformed

    private void jBEliminarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarEventoActionPerformed
        Paciente paciente = listaPacientes.get(indexPaciente);
        ArrayList<Evolucion> evoluciones = paciente.getEvoluciones();
        int idEventoCreado=Integer.parseInt(jTidEvento.getText());
       
      
         for (int i = 0; i < evoluciones.size(); i++) {
        
            Evolucion eventoEliminar=evoluciones.get(i);
            if (idEventoCreado==eventoEliminar.getIdEvento()) {
                evoluciones.remove(i);
                JOptionPane.showMessageDialog(null, "Evento eliminado correctamente"); 
                       
            }
        }
        
    }//GEN-LAST:event_jBEliminarEventoActionPerformed

    private void jBVolverPantallaPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVolverPantallaPrincipalActionPerformed
       RegistrarEvolucionPaciente volverMenuEventos=new RegistrarEvolucionPaciente();
       volverMenuEventos.setVisible(true);
       dispose();
    }//GEN-LAST:event_jBVolverPantallaPrincipalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EliminarEventosPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EliminarEventosPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EliminarEventosPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EliminarEventosPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EliminarEventosPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBConsultarEventos;
    private javax.swing.JButton jBEliminarEvento;
    private javax.swing.JButton jBModificarEvento;
    private javax.swing.JButton jBVolverPantallaPrincipal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTDescripcionEvento;
    private javax.swing.JTextField jTNuevaDescripcionEvento;
    private javax.swing.JTextField jTNuevoNivelGlucosa;
    private javax.swing.JTextField jTidEvento;
    // End of variables declaration//GEN-END:variables
}
